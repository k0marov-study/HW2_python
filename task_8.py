"""
Нужно имеющиеся буквы расставлять в порядке возрастания 
наибольшее возможное кол-во раз.
Например, если есть 3*"a", 2*"b", 4*"c". 
То нужно взять abc, потом еще раз abc, а больше комбинаций не получится. 
Таким образом, ответ будет (3-1) + (3-1) = 4. 
Или, если у нас есть 1*"a", 3*"b", 2*"c", 
то нужно взять abc, а потом, так как abc больше не получится, взять просто bc.

Другими словами, мы находим максимальное количество комбинаций из всех возможных букв (т.е сколько раз мы сможем взять abc) и ставим их. Понятно, что это кол-во будет равно наименьшему кол-ву из всех букв. Эти буквы из доступных убираем, а к ответу прибавляем кол-во таких комбинаций умножить на хорошесть, которую они дают (это длина минус 1). 
Затем повторяем алгоритм для последовательностей букв короче на 1 и так перебираем все возможные варианты. 

Получается такой алгоритм с асимптотикой O(n^3).
"""
n = int(input()) 
counts = [] 
for _ in range(n): 
    counts.append(int(input()))

answer = 0 
for i in range(n): 
    for j in range(n-1, i, -1): 
        min_count = None
        for x in counts[i:j+1]: 
            min_count = x if min_count is None or x < min_count 

        amount = j-i+1
        answer += (amount-1)*(min_count)
        for el in range(i, j+1): 
            counts[el] -= min_count

print(answer)


        



